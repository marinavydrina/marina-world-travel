import React, { useState, useEffect } from 'react';

const locations = [
  { name: '–ù–∞—Ä—å—è–Ω-–ú–∞—Ä', x: 65, y: 28, event: 'ü•∂ –¢—É—Ç —Å–ª–∏—à–∫–æ–º —Ö–æ–ª–æ–¥–Ω–æ –∏ –Ω–µ—Ç —Å–æ–ª–Ω—Ü–∞, –Ω—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –∫—É–¥–∞-—Ç–æ —Å–≤–∞–ª–∏—Ç—å.', positiveEvent: 'üèîÔ∏è –ú–∞—Ä–∏–Ω–∞ –æ—Ç–∫—Ä—ã–ª–∞ –ø–µ—Ä–≤—ã–π –≤ –º–∏—Ä–µ –∞—Ä–∫—Ç–∏—á–µ—Å–∫–∏–π spa-–∫—É—Ä–æ—Ä—Ç –∏ –ø—Ä–æ—Å–ª–∞–≤–∏–ª–∞—Å—å –Ω–∞ –≤–µ—Å—å –º–∏—Ä!' },
  { name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', x: 58, y: 34, event: 'üåßÔ∏è –ú–∞—Ä–∏–Ω–∞ –ø–æ–ø–∞–ª–∞ –ø–æ–¥ –¥–æ–∂–¥—å –∏ –ø—Ä–æ—Å—Ç—É–¥–∏–ª–∞—Å—å. –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ —É–µ–∑–∂–∞—Ç—å –≤ —Ç–µ–ø–ª—ã–µ –∫—Ä–∞—è!', positiveEvent: 'üé≠ –ú–∞—Ä–∏–Ω–∞ —Å—Ç–∞–ª–∞ –∏–∑–≤–µ—Å—Ç–Ω–æ–π –∞–∫—Ç—Ä–∏—Å–æ–π –≤ –ú–∞—Ä–∏–∏–Ω—Å–∫–æ–º —Ç–µ–∞—Ç—Ä–µ –∏ –Ω–∞—à–ª–∞ —Å–≤–æ–µ –ø—Ä–∏–∑–≤–∞–Ω–∏–µ!' },
  { name: '–ú–æ—Å–∫–≤–∞', x: 62, y: 36, event: 'üöó –ú–∞—Ä–∏–Ω–∞ –∑–∞—Å—Ç—Ä—è–ª–∞ –≤ –ø—Ä–æ–±–∫–µ –Ω–∞ –ú–ö–ê–î –Ω–∞ 5 —á–∞—Å–æ–≤. –ü–æ—Ä–∞ –∏—Å–∫–∞—Ç—å –≥–æ—Ä–æ–¥ –ø–æ—Å–ø–æ–∫–æ–π–Ω–µ–µ.', positiveEvent: 'üèôÔ∏è –ú–∞—Ä–∏–Ω–∞ –æ—Å–Ω–æ–≤–∞–ª–∞ —É—Å–ø–µ—à–Ω—ã–π —Å—Ç–∞—Ä—Ç–∞–ø –∏ —Å—Ç–∞–ª–∞ –æ–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –≤–ª–∏—è—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∏—Ü —Å—Ç–æ–ª–∏—Ü—ã!' },
  { name: '–ê—Ä–º–µ–Ω–∏—è', x: 62, y: 44, event: 'üçñ –ú–∞—Ä–∏–Ω–∞ –æ–±—ä–µ–ª–∞—Å—å —à–∞—à–ª—ã–∫–∞–º–∏ –∏ –ª–∞–≤–∞—à–æ–º. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–æ, –≥–¥–µ –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∞—è –µ–¥–∞.', positiveEvent: 'üç∑ –ú–∞—Ä–∏–Ω–∞ —Å—Ç–∞–ª–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–º –ø–æ –∞—Ä–º—è–Ω—Å–∫–∏–º –≤–∏–Ω–∞–º –∏ –æ—Ç–∫—Ä—ã–ª–∞ —Å–µ—Ç—å –≤–∏–Ω–Ω—ã—Ö –±—É—Ç–∏–∫–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É!' },
  { name: '–ì—Ä—É–∑–∏—è', x: 65, y: 42, event: 'üëü –£ –ú–∞—Ä–∏–Ω—ã —É–∫—Ä–∞–ª–∏ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ –∏ –≤—ã–≥–Ω–∞–ª–∏ —Å–æ —Å—ä–µ–º–Ω–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã. –ü–æ—Ä–∞ –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ!', positiveEvent: 'üçá –ú–∞—Ä–∏–Ω–∞ –≤–æ–∑—Ä–æ–¥–∏–ª–∞ –¥—Ä–µ–≤–Ω–∏–π —Å–æ—Ä—Ç –≤–∏–Ω–æ–≥—Ä–∞–¥–∞ –∏ –ø—Ä–æ—Å–ª–∞–≤–∏–ª–∞—Å—å –∫–∞–∫ –ª—É—á—à–∏–π –≤–∏–Ω–æ–¥–µ–ª –ì—Ä—É–∑–∏–∏!' },
  { name: '–î—É–±–∞–π', x: 66, y: 51, event: 'üèúÔ∏è –ú–∞—Ä–∏–Ω–∞ —á—É—Ç—å –Ω–µ —Ä–∞—Å—Ç–∞—è–ª–∞ –æ—Ç –∂–∞—Ä—ã. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –º–µ—Å—Ç–æ —Å –±–æ–ª–µ–µ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º –∫–ª–∏–º–∞—Ç–æ–º.', positiveEvent: 'üèóÔ∏è –ú–∞—Ä–∏–Ω–∞ —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–ª–∞ —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –Ω–µ–±–æ—Å–∫—Ä–µ–± –≤ –º–∏—Ä–µ –∏ —Å—Ç–∞–ª–∞ –≥–ª–∞–≤–Ω—ã–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä–æ–º –î—É–±–∞—è!' },
  { name: '–ì–∏–º–∞–ª–∞–∏', x: 72, y: 47, event: 'üåä –î–æ–∂–¥—å —à–µ–ª 3 –¥–Ω—è –∏ –¥–æ—Ä–æ–≥–∏ —Å–º—ã–ª–æ –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏–µ–º. –ú–∞—Ä–∏–Ω–µ –ø—Ä–∏—à–ª–æ—Å—å –∏–¥—Ç–∏ —á–µ—Ä–µ–∑ –ª–µ—Å —Å –¥–∏–∫–∏–º–∏ –æ–±–µ–∑—å—è–Ω–∞–º–∏ –≤ –ø–æ–∏—Å–∫–∞—Ö –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞.', positiveEvent: 'üßò –ú–∞—Ä–∏–Ω–∞ –¥–æ—Å—Ç–∏–≥–ª–∞ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—è, —Å—Ç–∞–≤ —Å–∞–º—ã–º –º–æ–ª–æ–¥—ã–º –≥—É—Ä—É –≤ –∏—Å—Ç–æ—Ä–∏–∏ –ì–∏–º–∞–ª–∞–µ–≤!' },
  { name: '–ë–∞–ª–∏', x: 82, y: 64, event: 'üï∑Ô∏è –ú–∞—Ä–∏–Ω—É —É–∫—É—Å–∏–ª –ø–∞—É–∫. –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –∏—Å–∫–∞—Ç—å –º–µ—Å—Ç–æ —Å —Ö–æ—Ä–æ—à–µ–π –º–µ–¥–∏—Ü–∏–Ω–æ–π!', positiveEvent: 'üèÑ‚Äç‚ôÄÔ∏è –ú–∞—Ä–∏–Ω–∞ —Å—Ç–∞–ª–∞ —á–µ–º–ø–∏–æ–Ω–∫–æ–π –º–∏—Ä–∞ –ø–æ —Å–µ—Ä—Ñ–∏–Ω–≥—É –∏ –æ—Ç–∫—Ä—ã–ª–∞ —à–∫–æ–ª—É —Å–µ—Ä—Ñ–∏–Ω–≥–∞ –Ω–∞ –ë–∞–ª–∏!' },
  { name: '–¢—É—Ä—Ü–∏—è', x: 58, y: 46, event: 'üì∫ –ú–∞—Ä–∏–Ω–µ –Ω–∞—Å–∫—É—á–∏–ª–∏ –≤—Å–µ —Ç—É—Ä–µ—Ü–∫–∏–µ —Å–µ—Ä–∏–∞–ª—ã. –ü–æ—Ä–∞ –∏—Å–∫–∞—Ç—å –Ω–æ–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.', positiveEvent: 'üßø –ú–∞—Ä–∏–Ω–∞ —Ä–∞—Å–∫—Ä—ã–ª–∞ —Å–µ–∫—Ä–µ—Ç –¥—Ä–µ–≤–Ω–µ–≥–æ –∞–º—É–ª–µ—Ç–∞ –∏ —Å—Ç–∞–ª–∞ —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω–∏—Ü–µ–π –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞!' },
  { name: '–°–µ—Ä–±–∏—è', x: 55, y: 44, event: 'üç≤ –ú–∞—Ä–∏–Ω–∞ –Ω–µ —Å–º–æ–≥–ª–∞ –ø—Ä–∏–≤—ã–∫–Ω—É—Ç—å –∫ –º–µ—Å—Ç–Ω–æ–π –∫—É—Ö–Ω–µ. –ù—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å —Å—Ç—Ä–∞–Ω—É —Å –±–æ–ª–µ–µ –ø—Ä–∏–≤—ã—á–Ω–æ–π –µ–¥–æ–π.', positiveEvent: 'üéæ –ú–∞—Ä–∏–Ω–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –≤—ã–∏–≥—Ä–∞–ª–∞ —Ç–µ–Ω–Ω–∏—Å–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä –∏ —Å—Ç–∞–ª–∞ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –≥–µ—Ä–æ–∏–Ω–µ–π –°–µ—Ä–±–∏–∏!' },
  { name: '–¢–∞–π–ª–∞–Ω–¥', x: 78, y: 57, event: 'üï∑Ô∏è –ú–∞—Ä–∏–Ω—É –Ω–∞–ø—É–≥–∞–ª–∏ –æ–≥—Ä–æ–º–Ω—ã–µ –º–µ—Å—Ç–Ω—ã–µ –ø–∞—É–∫–∏. –ü–æ—Ä–∞ –∏—Å–∫–∞—Ç—å –º–µ—Å—Ç–æ —Å –º–µ–Ω–µ–µ —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–æ–π —Ñ–∞—É–Ω–æ–π.', positiveEvent: 'üêò –ú–∞—Ä–∏–Ω–∞ –æ—Å–Ω–æ–≤–∞–ª–∞ –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫ –¥–ª—è —Å–ª–æ–Ω–æ–≤ –∏ –ø–æ–ª—É—á–∏–ª–∞ –Ω–∞–≥—Ä–∞–¥—É –æ—Ç –∫–æ—Ä–æ–ª—è –¢–∞–π–ª–∞–Ω–¥–∞ –∑–∞ –≤–∫–ª–∞–¥ –≤ —ç–∫–æ–ª–æ–≥–∏—é!' },
  { name: '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞', x: 30, y: 70, event: 'üíî –ú–∞—Ä–∏–Ω–∞ —Ä–∞—Å—Å—Ç–∞–ª–∞—Å—å —Å –ø–∞—Ä–Ω–µ–º –∏ –æ—Å—Ç–∞–ª–∞—Å—å –æ–¥–Ω–∞ –≤ —á—É–∂–æ–π —Å—Ç—Ä–∞–Ω–µ. –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –º–µ–Ω—è—Ç—å –æ–±—Å—Ç–∞–Ω–æ–≤–∫—É!', positiveEvent: 'üë∂ –ú–∞—Ä–∏–Ω–∞ —Ä–æ–¥–∏–ª–∞ —Ä–µ–±–µ–Ω–∫–∞ –∏ –ø–æ–ª—É—á–∏–ª–∞ –≤—Ç–æ—Ä–æ–µ –≥—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ. –û–Ω–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ç—É—Ç –∂–∏—Ç—å!' },
  { name: '–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è', x: 46, y: 45, event: 'üç∑ –ú–∞—Ä–∏–Ω–∞ –ø–µ—Ä–µ–ø–∏–ª–∞ –ø–æ—Ä—Ç–≤–µ–π–Ω–∞ –∏ –ø—Ä–æ—Å–ø–∞–ª–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –º–µ–Ω–µ–µ "–æ–ø–∞—Å–Ω–æ–µ" –º–µ—Å—Ç–æ –¥–ª—è –æ—Ç–¥—ã—Ö–∞.', positiveEvent: 'üé∏ –ú–∞—Ä–∏–Ω–∞ –Ω–∞—É—á–∏–ª–∞—Å—å –∏–≥—Ä–∞—Ç—å —Ñ–∞–¥—É –∏ —Å—Ç–∞–ª–∞ –∑–≤–µ–∑–¥–æ–π –ª–∏—Å—Å–∞–±–æ–Ω—Å–∫–∏—Ö —Ç–∞–≤–µ—Ä–Ω!' },
  { name: '–ò—Å–ø–∞–Ω–∏—è', x: 49, y: 43, event: 'üêÇ –ú–∞—Ä–∏–Ω–∞ —Å–ª—É—á–∞–π–Ω–æ –æ–∫–∞–∑–∞–ª–∞—Å—å –Ω–∞ –±–µ–≥–µ –±—ã–∫–æ–≤ –∏ –µ–ª–µ —É–Ω–µ—Å–ª–∞ –Ω–æ–≥–∏. –ü–æ—Ä–∞ –∏—Å–∫–∞—Ç—å –±–æ–ª–µ–µ —Å–ø–æ–∫–æ–π–Ω–æ–µ –º–µ—Å—Ç–æ.', positiveEvent: 'üíÉ –ú–∞—Ä–∏–Ω–∞ –≤—ã–∏–≥—Ä–∞–ª–∞ —á–µ–º–ø–∏–æ–Ω–∞—Ç –ø–æ —Ñ–ª–∞–º–µ–Ω–∫–æ –∏ –æ—Ç–∫—Ä—ã–ª–∞ —Å–∞–º—É—é –ø–æ–ø—É–ª—è—Ä–Ω—É—é —à–∫–æ–ª—É —Ç–∞–Ω—Ü–µ–≤ –≤ –°–µ–≤–∏–ª—å–µ!' },
  { name: '–°–®–ê', x: 20, y: 40, event: 'üçî –ú–∞—Ä–∏–Ω–∞ –Ω–∞–±—Ä–∞–ª–∞ 5 –∫–≥ –∑–∞ –Ω–µ–¥–µ–ª—é –∏–∑-–∑–∞ —Ñ–∞—Å—Ç—Ñ—É–¥–∞. –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –º–µ–Ω—è—Ç—å —Ä–∞—Ü–∏–æ–Ω –∏ —Å—Ç—Ä–∞–Ω—É!', positiveEvent: 'üé¨ –ú–∞—Ä–∏–Ω–∞ —Å–Ω—è–ª–∞—Å—å –≤ –≥–æ–ª–ª–∏–≤—É–¥—Å–∫–æ–º –±–ª–æ–∫–±–∞—Å—Ç–µ—Ä–µ –∏ –ø–æ–ª—É—á–∏–ª–∞ –û—Å–∫–∞—Ä –∑–∞ –ª—É—á—à—É—é –∂–µ–Ω—Å–∫—É—é —Ä–æ–ª—å!' },
  { name: '–í—å–µ—Ç–Ω–∞–º', x: 81, y: 54, event: 'üõµ –ú–∞—Ä–∏–Ω—É —á—É—Ç—å –Ω–µ —Å–±–∏–ª –º–æ–ø–µ–¥ –Ω–∞ —Ç—Ä–æ—Ç—É–∞—Ä–µ. –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å—Ç—Ä–∞–Ω—É —Å –º–µ–Ω–µ–µ —Ö–∞–æ—Ç–∏—á–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º.', positiveEvent: '‚òï –ú–∞—Ä–∏–Ω–∞ —Å–æ–∑–¥–∞–ª–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–æ—Ä—Ç –∫–æ—Ñ–µ –∏ –æ—Ç–∫—Ä—ã–ª–∞ —Å–µ—Ç—å –∫–æ—Ñ–µ–µ–Ω –ø–æ –≤—Å–µ–π –Æ–≥–æ-–í–æ—Å—Ç–æ—á–Ω–æ–π –ê–∑–∏–∏!' },
];

const WorldMapGame = () => {
  const [currentLocation, setCurrentLocation] = useState(locations[0]);
  const [visitedLocations, setVisitedLocations] = useState([locations[0].name]);
  const [isGameOver, setIsGameOver] = useState(false);
  const [truncatedEvent, setTruncatedEvent] = useState('');
  const [marinaPosition, setMarinaPosition] = useState({ x: locations[0].x, y: locations[0].y });

  const findSafePosition = (location) => {
    const directions = [
      { dx: 2, dy: 0 }, { dx: -2, dy: 0 }, { dx: 0, dy: 2 }, { dx: 0, dy: -2 },
      { dx: 2, dy: 2 }, { dx: 2, dy: -2 }, { dx: -2, dy: 2 }, { dx: -2, dy: -2 }
    ];
    
    for (let { dx, dy } of directions) {
      const newX = location.x + dx;
      const newY = location.y + dy;
      if (!locations.some(loc => Math.abs(loc.x - newX) < 2 && Math.abs(loc.y - newY) < 2)) {
        return { x: newX, y: newY };
      }
    }
    
    return { x: location.x, y: location.y };
  };

  useEffect(() => {
    const maxLength = 150;
    const eventText = visitedLocations.length === 6 ? currentLocation.positiveEvent : currentLocation.event;
    setTruncatedEvent(eventText.length > maxLength ? eventText.substring(0, maxLength) + '...' : eventText);
    
    const safePosition = findSafePosition(currentLocation);
    setMarinaPosition(safePosition);
  }, [currentLocation, visitedLocations]);

  const handleLocationClick = (location) => {
    if (visitedLocations.length === 5) {
      setCurrentLocation(location);
      setVisitedLocations([...visitedLocations, location.name]);
      setIsGameOver(true);
    } else if (visitedLocations.length < 5) {
      setCurrentLocation(location);
      setVisitedLocations([...visitedLocations, location.name]);
    }
  };

  const resetGame = () => {
    setCurrentLocation(locations[0]);
    setVisitedLocations([locations[0].name]);
    setIsGameOver(false);
    setMarinaPosition(findSafePosition(locations[0]));
  };

  return (
    <div className="flex flex-col min-h-screen">
      <div className="bg-white p-4 shadow-lg flex flex-col justify-start space-y-2">
  <div>
    <h2 className="text-xl md:text-2xl font-bold mb-1">{currentLocation.name}</h2>
    <p className="text-sm md:text-base">{truncatedEvent}</p>
  </div>
  {isGameOver ? (
    <p className="font-bold text-green-600 text-sm md:text-base">
      –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ú–∞—Ä–∏–Ω–∞ –Ω–∞—à–ª–∞ —Å–≤–æ–π –¥–æ–º.
    </p>
  ) : (
    <p className="font-bold text-red-600 text-sm md:text-base">
      –í—ã–±–∏—Ä–∞–π —Å–ª–µ–¥—É—é—â—É—é –ª–æ–∫–∞—Ü–∏—é. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ—Å–µ—Ç–∏—Ç—å: {6 - visitedLocations.length}
    </p>
  )}
</div>
      
<div className="relative flex-grow overflow-hidden flex flex-col">
<div className="relative w-full">
        <img 
          src="https://i.postimg.cc/NfjF53CQ/translucent-image-1.png" 
          alt="Pixel World Map" 
          className="w-full object-cover"
        />

{locations.map((location) => (
          <button
            key={location.name}
            className={`absolute w-4 h-4 md:w-5 md:h-5 rounded-full ${
              visitedLocations.includes(location.name) || isGameOver
                ? 'bg-gray-500'
                : 'bg-red-500 hover:bg-red-600'
            }`}
            style={{ 
              left: `${location.x}%`, 
              top: `${location.y}%`, 
              transform: 'translate(-50%, -50%)' 
            }}
            onClick={() => handleLocationClick(location)}
            disabled={visitedLocations.includes(location.name) || isGameOver}
          />
        ))}
        
        <svg
          className="absolute transition-all duration-500 ease-in-out"
          style={{ 
            left: `${marinaPosition.x}%`, 
            top: `${marinaPosition.y}%`, 
            transform: 'translate(-50%, -50%)' 
          }}
          width="20"
          height="30"
          viewBox="0 0 10 15"
        >
          <rect x="2" y="0" width="6" height="6" fill="#FF9999" />
          <path d="M2 0 Q5 -2 8 0 L8 3 L2 3 Z" fill="#1a1a1a" />
          <rect x="3" y="2" width="1" height="1" fill="#000000" />
          <rect x="6" y="2" width="1" height="1" fill="#000000" />
          <rect x="3" y="6" width="4" height="6" fill="#FF0000" />
          <rect x="2" y="12" width="2" height="3" fill="#FF9999" />
          <rect x="6" y="12" width="2" height="3" fill="#FF9999" />
        </svg>
        
        
        
        
        {isGameOver && (
          <div className="absolute bottom-4 right-4">
            <button
              className="bg-green-500 text-white px-2 py-1 md:px-4 md:py-2 rounded text-sm md:text-base hover:bg-green-600"
              onClick={resetGame}
            >
              –°—ã–≥—Ä–∞—Ç—å –µ—â–µ
            </button>
          </div>
        )}
        </div>
      </div>
    </div>
  );
};

export default WorldMapGame;
